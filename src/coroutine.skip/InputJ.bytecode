Classfile /Users/baseballyama/Desktop/git/kotlin-java-bytecode/src/coroutine.skip/InputJ.class
  Last modified 2022/10/27; size 2043 bytes
  SHA-256 checksum cffea08837b3e2c6caadcb0194106972b77828a7b43649f4cfb00b3f57f9d2a2
  Compiled from "InputJ.java"
class InputJ
  minor version: 65535
  major version: 63
  flags: (0x0020) ACC_SUPER
  this_class: #64                         // InputJ
  super_class: #2                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 4, attributes: 3
Constant pool:
    #1 = Methodref          #2.#3         // java/lang/Object."<init>":()V
    #2 = Class              #4            // java/lang/Object
    #3 = NameAndType        #5:#6         // "<init>":()V
    #4 = Utf8               java/lang/Object
    #5 = Utf8               <init>
    #6 = Utf8               ()V
    #7 = Methodref          #8.#9         // java/util/concurrent/Executors.newVirtualThreadPerTaskExecutor:()Ljava/util/concurrent/ExecutorService;
    #8 = Class              #10           // java/util/concurrent/Executors
    #9 = NameAndType        #11:#12       // newVirtualThreadPerTaskExecutor:()Ljava/util/concurrent/ExecutorService;
   #10 = Utf8               java/util/concurrent/Executors
   #11 = Utf8               newVirtualThreadPerTaskExecutor
   #12 = Utf8               ()Ljava/util/concurrent/ExecutorService;
   #13 = InterfaceMethodref #14.#15       // java/util/stream/IntStream.range:(II)Ljava/util/stream/IntStream;
   #14 = Class              #16           // java/util/stream/IntStream
   #15 = NameAndType        #17:#18       // range:(II)Ljava/util/stream/IntStream;
   #16 = Utf8               java/util/stream/IntStream
   #17 = Utf8               range
   #18 = Utf8               (II)Ljava/util/stream/IntStream;
   #19 = InvokeDynamic      #0:#20        // #0:accept:(Ljava/util/concurrent/ExecutorService;)Ljava/util/function/IntConsumer;
   #20 = NameAndType        #21:#22       // accept:(Ljava/util/concurrent/ExecutorService;)Ljava/util/function/IntConsumer;
   #21 = Utf8               accept
   #22 = Utf8               (Ljava/util/concurrent/ExecutorService;)Ljava/util/function/IntConsumer;
   #23 = InterfaceMethodref #14.#24       // java/util/stream/IntStream.forEach:(Ljava/util/function/IntConsumer;)V
   #24 = NameAndType        #25:#26       // forEach:(Ljava/util/function/IntConsumer;)V
   #25 = Utf8               forEach
   #26 = Utf8               (Ljava/util/function/IntConsumer;)V
   #27 = InterfaceMethodref #28.#29       // java/util/concurrent/ExecutorService.close:()V
   #28 = Class              #30           // java/util/concurrent/ExecutorService
   #29 = NameAndType        #31:#6        // close:()V
   #30 = Utf8               java/util/concurrent/ExecutorService
   #31 = Utf8               close
   #32 = Class              #33           // java/lang/Throwable
   #33 = Utf8               java/lang/Throwable
   #34 = Methodref          #32.#35       // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
   #35 = NameAndType        #36:#37       // addSuppressed:(Ljava/lang/Throwable;)V
   #36 = Utf8               addSuppressed
   #37 = Utf8               (Ljava/lang/Throwable;)V
   #38 = InvokeDynamic      #1:#39        // #1:call:(I)Ljava/util/concurrent/Callable;
   #39 = NameAndType        #40:#41       // call:(I)Ljava/util/concurrent/Callable;
   #40 = Utf8               call
   #41 = Utf8               (I)Ljava/util/concurrent/Callable;
   #42 = InterfaceMethodref #28.#43       // java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
   #43 = NameAndType        #44:#45       // submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
   #44 = Utf8               submit
   #45 = Utf8               (Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
   #46 = Methodref          #47.#48       // java/time/Duration.ofSeconds:(J)Ljava/time/Duration;
   #47 = Class              #49           // java/time/Duration
   #48 = NameAndType        #50:#51       // ofSeconds:(J)Ljava/time/Duration;
   #49 = Utf8               java/time/Duration
   #50 = Utf8               ofSeconds
   #51 = Utf8               (J)Ljava/time/Duration;
   #52 = Methodref          #53.#54       // java/lang/Thread.sleep:(Ljava/time/Duration;)V
   #53 = Class              #55           // java/lang/Thread
   #54 = NameAndType        #56:#57       // sleep:(Ljava/time/Duration;)V
   #55 = Utf8               java/lang/Thread
   #56 = Utf8               sleep
   #57 = Utf8               (Ljava/time/Duration;)V
   #58 = Methodref          #59.#60       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
   #59 = Class              #61           // java/lang/Integer
   #60 = NameAndType        #62:#63       // valueOf:(I)Ljava/lang/Integer;
   #61 = Utf8               java/lang/Integer
   #62 = Utf8               valueOf
   #63 = Utf8               (I)Ljava/lang/Integer;
   #64 = Class              #65           // InputJ
   #65 = Utf8               InputJ
   #66 = Utf8               Code
   #67 = Utf8               LineNumberTable
   #68 = Utf8               main
   #69 = Utf8               ([Ljava/lang/String;)V
   #70 = Utf8               StackMapTable
   #71 = Class              #72           // "[Ljava/lang/String;"
   #72 = Utf8               [Ljava/lang/String;
   #73 = Utf8               lambda$main$1
   #74 = Utf8               (Ljava/util/concurrent/ExecutorService;I)V
   #75 = Utf8               lambda$main$0
   #76 = Utf8               Exceptions
   #77 = Class              #78           // java/lang/Exception
   #78 = Utf8               java/lang/Exception
   #79 = Utf8               SourceFile
   #80 = Utf8               InputJ.java
   #81 = Utf8               BootstrapMethods
   #82 = MethodHandle       6:#83         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
   #83 = Methodref          #84.#85       // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
   #84 = Class              #86           // java/lang/invoke/LambdaMetafactory
   #85 = NameAndType        #87:#88       // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
   #86 = Utf8               java/lang/invoke/LambdaMetafactory
   #87 = Utf8               metafactory
   #88 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
   #89 = MethodType         #90           //  (I)V
   #90 = Utf8               (I)V
   #91 = MethodHandle       6:#92         // REF_invokeStatic InputJ.lambda$main$1:(Ljava/util/concurrent/ExecutorService;I)V
   #92 = Methodref          #64.#93       // InputJ.lambda$main$1:(Ljava/util/concurrent/ExecutorService;I)V
   #93 = NameAndType        #73:#74       // lambda$main$1:(Ljava/util/concurrent/ExecutorService;I)V
   #94 = MethodType         #95           //  ()Ljava/lang/Object;
   #95 = Utf8               ()Ljava/lang/Object;
   #96 = MethodHandle       6:#97         // REF_invokeStatic InputJ.lambda$main$0:(I)Ljava/lang/Integer;
   #97 = Methodref          #64.#98       // InputJ.lambda$main$0:(I)Ljava/lang/Integer;
   #98 = NameAndType        #75:#63       // lambda$main$0:(I)Ljava/lang/Integer;
   #99 = MethodType         #100          //  ()Ljava/lang/Integer;
  #100 = Utf8               ()Ljava/lang/Integer;
  #101 = Utf8               InnerClasses
  #102 = Class              #103          // java/lang/invoke/MethodHandles$Lookup
  #103 = Utf8               java/lang/invoke/MethodHandles$Lookup
  #104 = Class              #105          // java/lang/invoke/MethodHandles
  #105 = Utf8               java/lang/invoke/MethodHandles
  #106 = Utf8               Lookup
{
  InputJ();
    descriptor: ()V
    flags: (0x0000)
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 5: 0

  public static void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=4, args_size=1
         0: invokestatic  #7                  // Method java/util/concurrent/Executors.newVirtualThreadPerTaskExecutor:()Ljava/util/concurrent/ExecutorService;
         3: astore_1
         4: iconst_0
         5: sipush        10000
         8: invokestatic  #13                 // InterfaceMethod java/util/stream/IntStream.range:(II)Ljava/util/stream/IntStream;
        11: aload_1
        12: invokedynamic #19,  0             // InvokeDynamic #0:accept:(Ljava/util/concurrent/ExecutorService;)Ljava/util/function/IntConsumer;
        17: invokeinterface #23,  2           // InterfaceMethod java/util/stream/IntStream.forEach:(Ljava/util/function/IntConsumer;)V
        22: aload_1
        23: ifnull        57
        26: aload_1
        27: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/ExecutorService.close:()V
        32: goto          57
        35: astore_2
        36: aload_1
        37: ifnull        55
        40: aload_1
        41: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/ExecutorService.close:()V
        46: goto          55
        49: astore_3
        50: aload_2
        51: aload_3
        52: invokevirtual #34                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
        55: aload_2
        56: athrow
        57: return
      Exception table:
         from    to  target type
             4    22    35   Class java/lang/Throwable
            40    46    49   Class java/lang/Throwable
      LineNumberTable:
        line 7: 0
        line 8: 4
        line 14: 22
        line 7: 35
        line 15: 57
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 35
          locals = [ class "[Ljava/lang/String;", class java/util/concurrent/ExecutorService ]
          stack = [ class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 13
          locals = [ class "[Ljava/lang/String;", class java/util/concurrent/ExecutorService, class java/lang/Throwable ]
          stack = [ class java/lang/Throwable ]
        frame_type = 5 /* same */
        frame_type = 249 /* chop */
          offset_delta = 1

  private static void lambda$main$1(java.util.concurrent.ExecutorService, int);
    descriptor: (Ljava/util/concurrent/ExecutorService;I)V
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokedynamic #38,  0             // InvokeDynamic #1:call:(I)Ljava/util/concurrent/Callable;
         7: invokeinterface #42,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
        12: pop
        13: return
      LineNumberTable:
        line 9: 0
        line 13: 13

  private static java.lang.Integer lambda$main$0(int) throws java.lang.Exception;
    descriptor: (I)Ljava/lang/Integer;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: lconst_1
         1: invokestatic  #46                 // Method java/time/Duration.ofSeconds:(J)Ljava/time/Duration;
         4: invokestatic  #52                 // Method java/lang/Thread.sleep:(Ljava/time/Duration;)V
         7: iload_0
         8: invokestatic  #58                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        11: areturn
      LineNumberTable:
        line 10: 0
        line 11: 7
    Exceptions:
      throws java.lang.Exception
}
SourceFile: "InputJ.java"
BootstrapMethods:
  0: #82 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #89 (I)V
      #91 REF_invokeStatic InputJ.lambda$main$1:(Ljava/util/concurrent/ExecutorService;I)V
      #89 (I)V
  1: #82 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 ()Ljava/lang/Object;
      #96 REF_invokeStatic InputJ.lambda$main$0:(I)Ljava/lang/Integer;
      #99 ()Ljava/lang/Integer;
InnerClasses:
  public static final #106= #102 of #104; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
